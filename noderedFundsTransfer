[{"id":"9af49d03.4d285","type":"inject","z":"8f597247.521d7","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":87.5,"y":57,"wires":[["373ed2a7.e8f44e"]]},{"id":"b6a38568.029d18","type":"function","z":"8f597247.521d7","name":"createNSFmsg","func":"var payer = flow.get(\"fromAcct\");\nmsg.payload = \"Insufficient funds to transfer $\" + flow.get('amount') + \" from \" + payer.Account.Name + \"'s account\"\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":280,"wires":[["e9361399.b74ab"]]},{"id":"373ed2a7.e8f44e","type":"function","z":"8f597247.521d7","name":"setVariables","func":"// set amount to transfer\nvar amount = 400.00;\nflow.set('amount', parseFloat(amount));\n// init available balance\nvar availBalance = 0.0;\nflow.set('availBalance', parseFloat(availBalance));\n// set acct froom which funds will be taken\nvar fromName = \"Jack\";\nvar from = {\n    Account : {\n        Name : fromName,\n        LPID : \"913995730031830909\",\n        Company : \"815\",\n        ProductCode : \"DDA\",\n        AcctNum : \"00000000000000822943114\"\n    }\n    };    \nflow.set(\"fromAcct\", from);\n// set account to which funds will be transfered\nvar toName = \"Janet\";\nvar dest = {\n    Account : {\n        Name : toName,\n        LPID : \"913995730031830909\",\n        Company : \"815\",\n        ProductCode : \"DDA\",\n        AcctNum : \"00000000000130101904782\"\n    }\n    }; \nflow.set(\"toAcct\", dest);\n// set status string\nvar myStatus = \"Preparing to tranfer $\" + flow.get('amount') + \" from \" + fromName + \"'s account to \" + toName + \"'s account\";\nmsg.payload = myStatus;\nreturn msg;\n","outputs":1,"noerr":0,"x":263.5,"y":57,"wires":[["bce5ad20.14eeb","a1605d5a.97706"]]},{"id":"7193776.f85a588","type":"http request","z":"8f597247.521d7","name":"getFromAccounts","method":"POST","ret":"obj","url":"https://api119525live.gateway.akana.com:443/user/accounts","tls":"","x":530,"y":160,"wires":[["c040eb65.ae0588","7d3c91fb.e4bad"]],"inputLabels":["payload"]},{"id":"7d3c91fb.e4bad","type":"debug","z":"8f597247.521d7","name":"beforeBalance","active":true,"console":"false","complete":"payload","x":920,"y":140,"wires":[]},{"id":"a1605d5a.97706","type":"function","z":"8f597247.521d7","name":"extractFromLPID","func":"var x = flow.get(\"fromAcct\");\n\nvar test = {\n    \"LegalParticipantIdentifier\": x.Account.LPID};\nmsg.payload = test;\nreturn msg;\n","outputs":1,"noerr":0,"x":290,"y":160,"wires":[["7193776.f85a588"]]},{"id":"cf7e3720.ce4848","type":"switch","z":"8f597247.521d7","name":"checkBalance","property":"amount","propertyType":"flow","rules":[{"t":"gt","v":"availBalance","vt":"flow"},{"t":"lte","v":"availBalance","vt":"flow"}],"checkall":"false","outputs":2,"x":300,"y":300,"wires":[["b6a38568.029d18"],["643876de.8a4088"]],"outputLabels":["NSF",""]},{"id":"c040eb65.ae0588","type":"function","z":"8f597247.521d7","name":"findBalance","func":"var result = msg.payload;\nvar balance = 0.0;\n// get account parameters\nvar fromAcct = flow.get(\"fromAcct\");\nvar productCode = fromAcct.Account.ProductCode;\nvar account = fromAcct.Account.AcctNum;\nvar i = 0;\nvar found = false;\nvar len = result.AccessibleAccountDetailList.length;\nwhile (i < len) {\n    var sample = result.AccessibleAccountDetailList[i];\n    var thisAcct = sample.PrimaryIdentifier;\n    var thisCode = sample.ProductCode;\n    if ((thisAcct === account) && (thisCode === productCode)) {\n        found = true;\n        balance = sample.BasicAccountDetail.Balances.AvailableBalanceAmount;\n        break;\n    }\n    i++;\n}\n    flow.set('availBalance', parseFloat(balance));\n    if (found) {\n        msg.payload = \"Available Balance is $\" + flow.get('availBalance');\n        return msg\n    }\n\n    msg.payload = \"Account was not found for \" + fromAcct.Account.Name;\n\nreturn msg;","outputs":"1","noerr":0,"x":730,"y":160,"wires":[["cf7e3720.ce4848","7d3c91fb.e4bad"]]},{"id":"bce5ad20.14eeb","type":"debug","z":"8f597247.521d7","name":"initial message","active":true,"console":"false","complete":"payload","x":900,"y":40,"wires":[]},{"id":"e9361399.b74ab","type":"debug","z":"8f597247.521d7","name":"NSF output","active":true,"console":"false","complete":"payload","x":730,"y":280,"wires":[]},{"id":"643876de.8a4088","type":"function","z":"8f597247.521d7","name":"createFundsTransferMsg","func":"var payer = flow.get(\"fromAcct\");\nvar payee = flow.get(\"toAcct\");\nvar amount = flow.get('amount').toString();\n// get date\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\nvar dateFormatted = yyyy + \"-\" + mm + \"-\" +dd;\n\n//        Name : fromName,\n//        Company : \"815\",\n//        ProductCode : \"DDA\",\n//        AcctNum : \"00000000000000822943114\"\n\n\nvar transferMsg = \n{\n       \"personalUserID\" : \"M01260604\",\n       \"channelCode\" : \"OLB_MM\",\n       \"transactionTypeCode\" : \"REGPMT\",\n       \"fromOperatingCompanyIdentifier\" : payer.Account.Company,\n       \"fromProductCode\" : payer.Account.ProductCode,\n       \"fromPrimaryAccountIdentifier\" : payer.Account.AcctNum,\n       \"toOperatingCompanyIdentifier\" : payee.Account.Company,\n       \"toProductCode\" : payee.Account.ProductCode,\n       \"toPrimaryAccountIdentifier\" : payee.Account.AcctNum,\n       \"requestedTransferAmount\" : amount,\n       \"identityIdentifier\" : \"MOBLBNKG\",\n       \"paymentType\" : \"OtherAmount\",\n       \"paymentTypeCode\" : \"FUTUREPMTMADETHRUWEB\",\n       \"effectiveDate\" : dateFormatted,\n       \"isRecurring\" : \"false\"\n}\nmsg.payload = transferMsg;\n//msg.payload = payer.Account.Company;\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":500,"wires":[["39af6683.d5b53a"]]},{"id":"39af6683.d5b53a","type":"http request","z":"8f597247.521d7","name":"requestFundsTransfer","method":"POST","ret":"obj","url":"https://api132269live.gateway.akana.com/fundstransfer","tls":"","x":540,"y":500,"wires":[["6edc5b3c.bf1354"]],"inputLabels":["payload"]},{"id":"3deed8e9.6779e8","type":"debug","z":"8f597247.521d7","name":"transferMsg","active":true,"console":"false","complete":"payload","x":750,"y":420,"wires":[]},{"id":"7a1e9610.7374b8","type":"debug","z":"8f597247.521d7","name":"transferResult","active":true,"console":"false","complete":"payload","x":940,"y":500,"wires":[]},{"id":"6edc5b3c.bf1354","type":"function","z":"8f597247.521d7","name":"findStatus","func":"var result = msg.payload.SetUpComplete;\n// build message\nmyMsg = \"Funds transfer failed\";\nif (result === \"success\") {\n   var fromAcct = flow.get(\"fromAcct\");\n   var toAcct = flow.get(\"toAcct\");\n   var amount = flow.get('amount').toString();\n   var newBalance = flow.get('availBalance') - flow.get('amount');\n   myMsg = \"Successfully transferred $\" + amount + \" from \" + fromAcct.Account.Name + \" to \" + toAcct.Account.Name + \". \";\n   myMsg += fromAcct.Account.Name + \"'s new balance is $\" + newBalance.toString();\n   \n \n}\n// get account parameters\nmsg.payload = myMsg;\n\nreturn msg;","outputs":"1","noerr":0,"x":750,"y":500,"wires":[["7a1e9610.7374b8"]]}]
